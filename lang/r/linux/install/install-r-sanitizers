#!/usr/bin/env bash

# Sanitizer flags
read -r -d '' DEFAULT_SANFLAGS <<- EOF
-fsanitize=address,undefined
-fsanitize-recover=address,undefined
-fno-omit-frame-pointer
-fno-sanitize=float-divide-by-zero
EOF
DEFAULT_SANFLAGS="$(echo "${DEFAULT_SANFLAGS}" | tr '\n' ' ')"

## ----- CONFIGURATION VARIABLES ----- ##

# Installation-related
: ${PREFIX="${HOME}/r/r-devel-sanitizers"}
: ${SOURCEDIR="${HOME}/r-devel"}
: ${TMP="${HOME}/tmp"}

## Compiler-specific
: ${SANFLAGS="${DEFAULT_SANFLAGS}"}
: ${CC="gcc -std=gnu99 ${SANFLAGS}"}
: ${CXX="g++ ${SANFLAGS}"}
: ${CFLAGS="-g -O1 -Wall -pedantic -DSWITCH_TO_REFCNT"}
: ${CXXFLAGS="-g -O1 -Wall -pedantic"}
: ${FORTRAN="gfortran"}
: ${FFLAGS="-g -O1"}
: ${OBJC="clang"}
: ${OBJCFLAGS="${CFLAGS}"}
: ${MAKE="make"}
: ${MAKEFLAGS="-j8"}
: ${MAIN_LD="${CXX} ${SANFLAGS}"}

## ----- END CONFIGURATION VARIABLES ----- ##


## Download R-devel from SVN
mkdir -p "${SOURCEDIR}" &> /dev/null
cd "${SOURCEDIR}"
info "Checking out latest R."
svn checkout https://svn.r-project.org/R/trunk/
cd trunk

## After downloading the R sources you should also download
## the recommended packages by entering the R source tree and running
info "Syncing recommended R packages."
./tools/rsync-recommended

## modify config.site so that it gets the appropriate compilers etc
cat > config.site <<- EOM
CC="${CC}"
CFLAGS="${CFLAGS}"
CXX="${CXX}"
CXXFLAGS="${CXXFLAGS}"
F77="${FORTRAN}"
FFLAGS="${FFLAGS}"
FC="${FORTRAN}"
FCFLAGS="${FFLAGS}"
OBJC="${OBJC}"
OBJCFLAGS="${OBJCFLAGS}"
MAKE="${MAKE}"
MAKEFLAGS="${MAKEFLAGS}"
MAIN_LD="${MAIN_LD}"
EOM

make distclean
make clean

## configure
./configure                           \
    --enable-R-shlib                  \
    --enable-R-profiling              \
    --enable-memory-profiling         \
    --with-valgrind-instrumentation=2 \
    --without-recommended-packages    \
    --prefix=${PREFIX}                \
    $@

STATUS="$?"
if [ "${STATUS}" -ne 0 ]; then
    warn "./configure failed. [exit code $?]"
    exit "${STATUS}"
fi

# Move Makevars out of the way
mv ~/.R/Makevars ~/.R/Makevars.bak

make -j10
STATUS="$?"

mv ~/.R/Makevars.bak ~/.R/Makevars
if [ "${STATUS}" -ne "0" ]; then
    warn "'make' failed. [exit code $?]"
    exit 1
fi

mkdir -p "${PREFIX}"
if [ -d "${PREFIX}" ] && [ -w "${PREFIX}" ]; then
    INSTALL="make install"
else
    INSTALL="sudo make install"
fi

${INSTALL} || {
    warn "'make -install' failed. [exit code $?]"
    exit 1
}

read -r -d '' R_ENVIRON_VARS <<- EOF
R_MAKEVARS_USER='~/.R/Makevars.san'
R_LIBS_USER='${PREFIX}/library'
EOF
echo "${R_ENVIRON_VARS}" >> "${PREFIX}/lib/R/etc/Renviron"

yay "Installation completed successfully."
cd ${OWD}

