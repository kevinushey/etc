#!/usr/bin/env bash
# shellcheck disable=SC2223

: "${CLANG="/usr/local/opt/llvm/bin/clang"}"
CLANG_VERSION="$("${CLANG}" --version | head -n 1 | awk '{ print $(NF) }')"
echo "Using clang ${CLANG_VERSION}"

## Ensure coreutils (for 'greadlink')
command -v readlink || {
	brew install coreutils
}

command -v "${CLANG}" &> /dev/null || {
	echo "${CLANG} not found on PATH; aborting"
	exit 1
}

## R configure settings
: ${PREFIX="${HOME}/r/r-devel-sanitizers"}
: ${SANFLAGS="-fsanitize=address,undefined -fsanitize-recover=address,undefined -fno-omit-frame-pointer -fno-sanitize=alignment,function,float-divide-by-zero"}
: ${SYSROOT="-isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk"}
: ${ENABLE_R_FRAMEWORK="no"}

## R compilation flags
## Note that compilation takes too long with optimization enabled.
: ${CC="${CLANG} -std=gnu99 ${SYSROOT} ${SANFLAGS}"}
: ${CXX="${CLANG}++ ${SYSROOT} ${SANFLAGS}"}
: ${CFLAGS="-g -O1 -Wall -pedantic -DSWITCH_TO_REFCNT"}
: ${CXXFLAGS="-g -O1 -Wall -pedantic -DSWITCH_TO_REFCNT"}
: ${F77="gfortran"}
: ${FC="gfortran"}

## Make sure that we use the clang++ compiler when building
## the R executable, so that sanitizer machinery gets compiled
## in. Note that we need to use clang++ to enable e.g. the 'vptr'
## sanitizer for C++ code. See:
##
##	 https://cran.r-project.org/doc/manuals/r-release/R-exts.html#Using-Undefined-Behaviour-Sanitizer
##
## for more information.
LLVM_BIN_DIR="$(dirname "${CLANG}")"
SANITIZER_PATH="${LLVM_BIN_DIR}/../lib/clang/${CLANG_VERSION}/lib/darwin"
SANITIZER_LIBS="-lclang_rt.asan_osx_dynamic -lclang_rt.ubsan_osx_dynamic"
MAIN_LD="${CLANG}++ ${SANFLAGS} -L\\\"${SANITIZER_PATH}\\\" ${SANITIZER_LIBS}"

# Set Makeflags by default
read -r -d '' R_MAKEVARS <<- EOF
MAKEFLAGS = -j4
EOF

## Create and use dummy Makevars.san
mkdir -p "${HOME}/.R"
R_MAKEVARS_USER="${HOME}/.R/Makevars.san"
export R_MAKEVARS_USER
if [ ! -f "${R_MAKEVARS_USER}" ]; then
	echo "${R_MAKEVARS}" > "${R_MAKEVARS_USER}"
fi

## Invoke install homebrew script with these variables
. install-r-homebrew || {
	echo "Failed to install R; aborting"
	exit 1
}

# Update Renviron so that we don't make use of '~/.R/Makevars'
read -r -d '' R_ENVIRON_VARS <<- EOF
R_MAKEVARS_USER='~/.R/Makevars.san'
R_LIBS_USER='${PREFIX}/library'
EOF

if [ "${ENABLE_R_FRAMEWORK}" = "no" ]; then
	echo "${R_ENVIRON_VARS}" >> "${PREFIX}/lib/R/etc/Renviron"
fi

